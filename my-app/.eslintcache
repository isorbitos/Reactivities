[{"D:\\dotnet tutor\\Reactivities\\my-app\\src\\index.tsx":"1","D:\\dotnet tutor\\Reactivities\\my-app\\src\\reportWebVitals.ts":"2","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\layout\\App.tsx":"3","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\nav\\navbar.tsx":"4","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\api\\agent.ts":"9","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\layout\\LoadingComponent.tsx":"10","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\activityStore.ts":"11","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\home\\HomePage.tsx":"12","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\layout\\ScrollToTop.tsx":"13","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetailHeader.tsx":"15","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetailInfo.tsx":"16","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetailChat.tsx":"17","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetailSidebar.tsx":"18","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\layout\\NotFound.tsx":"19","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\TextInput.tsx":"20","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\TextAreaInput.tsx":"21","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\SelectInput.tsx":"22","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\options\\categoryOptions.ts":"23","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\DateInput.tsx":"24","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\util\\util.ts":"25","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\models\\activity.ts":"26","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\rootStore.ts":"27","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\userStore.ts":"28","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\user\\LoginForm.tsx":"29","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\commonStore.ts":"30","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\modalStore.ts":"31","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\modals\\ModalContainer.tsx":"32","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessage.tsx":"33","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\user\\RegisterForm.tsx":"34","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx":"35","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfilePage.tsx":"36","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileHeader.tsx":"37","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileContent.tsx":"38","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\profileStore.ts":"39","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfilePhotos.tsx":"40","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx":"41","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\photoUpload\\PhotoWidgetDropzone.tsx":"42","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\photoUpload\\PhotoWidgetCropper.tsx":"43","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileDescription.tsx":"44","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileEditForm.tsx":"45","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileFollowings.tsx":"46","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileCard.tsx":"47"},{"size":981,"mtime":1609326431612,"results":"48","hashOfConfig":"49"},{"size":425,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":2201,"mtime":1610716238978,"results":"51","hashOfConfig":"49"},{"size":1662,"mtime":1610629677821,"results":"52","hashOfConfig":"49"},{"size":1078,"mtime":1609856016698,"results":"53","hashOfConfig":"49"},{"size":1070,"mtime":1609856211932,"results":"54","hashOfConfig":"49"},{"size":1621,"mtime":1610187962610,"results":"55","hashOfConfig":"49"},{"size":4689,"mtime":1609856431063,"results":"56","hashOfConfig":"49"},{"size":3594,"mtime":1611056437235,"results":"57","hashOfConfig":"49"},{"size":356,"mtime":1608223427837,"results":"58","hashOfConfig":"49"},{"size":8261,"mtime":1610961410533,"results":"59","hashOfConfig":"49"},{"size":1859,"mtime":1609862590169,"results":"60","hashOfConfig":"49"},{"size":256,"mtime":1608569162371,"results":"61","hashOfConfig":"49"},{"size":2523,"mtime":1610629604426,"results":"62","hashOfConfig":"49"},{"size":2267,"mtime":1610629947845,"results":"63","hashOfConfig":"49"},{"size":1739,"mtime":1609257639583,"results":"64","hashOfConfig":"49"},{"size":2568,"mtime":1610961459261,"results":"65","hashOfConfig":"49"},{"size":2005,"mtime":1610983078345,"results":"66","hashOfConfig":"49"},{"size":627,"mtime":1609162660846,"results":"67","hashOfConfig":"49"},{"size":642,"mtime":1609245326879,"results":"68","hashOfConfig":"49"},{"size":673,"mtime":1609245478943,"results":"69","hashOfConfig":"49"},{"size":826,"mtime":1609246226405,"results":"70","hashOfConfig":"49"},{"size":360,"mtime":1609246400613,"results":"71","hashOfConfig":"49"},{"size":1040,"mtime":1609331550538,"results":"72","hashOfConfig":"49"},{"size":1032,"mtime":1610205772837,"results":"73","hashOfConfig":"49"},{"size":1126,"mtime":1610982939208,"results":"74","hashOfConfig":"49"},{"size":860,"mtime":1610633059083,"results":"75","hashOfConfig":"49"},{"size":1763,"mtime":1609861869166,"results":"76","hashOfConfig":"49"},{"size":2005,"mtime":1610716188057,"results":"77","hashOfConfig":"49"},{"size":807,"mtime":1609856953116,"results":"78","hashOfConfig":"49"},{"size":596,"mtime":1609859483705,"results":"79","hashOfConfig":"49"},{"size":569,"mtime":1609859315096,"results":"80","hashOfConfig":"49"},{"size":720,"mtime":1609864037826,"results":"81","hashOfConfig":"49"},{"size":2422,"mtime":1610716217536,"results":"82","hashOfConfig":"49"},{"size":1098,"mtime":1610983498507,"results":"83","hashOfConfig":"49"},{"size":1310,"mtime":1611055369151,"results":"84","hashOfConfig":"49"},{"size":2212,"mtime":1610986959625,"results":"85","hashOfConfig":"49"},{"size":977,"mtime":1611057361074,"results":"86","hashOfConfig":"49"},{"size":6095,"mtime":1611057744934,"results":"87","hashOfConfig":"49"},{"size":4000,"mtime":1610716004335,"results":"88","hashOfConfig":"49"},{"size":2183,"mtime":1610716559735,"results":"89","hashOfConfig":"49"},{"size":1152,"mtime":1610716699351,"results":"90","hashOfConfig":"49"},{"size":1240,"mtime":1610704814322,"results":"91","hashOfConfig":"49"},{"size":1272,"mtime":1610878033969,"results":"92","hashOfConfig":"49"},{"size":1530,"mtime":1610878068213,"results":"93","hashOfConfig":"49"},{"size":1192,"mtime":1611057958805,"results":"94","hashOfConfig":"49"},{"size":731,"mtime":1611057419579,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"x6wgc7",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"119","usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"D:\\dotnet tutor\\Reactivities\\my-app\\src\\index.tsx",[],["194","195"],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\reportWebVitals.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\layout\\App.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\nav\\navbar.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\api\\agent.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\layout\\LoadingComponent.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\activityStore.ts",["196","197"],"import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { action, observable, computed, runInAction, makeObservable, values } from \"mobx\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { createAttendee, setActivityProps } from \"../common/util/util\";\r\nimport { IActivity } from \"../models/activity\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\n\r\n\r\n\r\nexport default class ActivityStore {\r\n    rootStore: RootStore;\r\n    constructor(rootStore: RootStore) {\r\n        makeObservable(this);\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @observable activityRegistry = new Map();\r\n    @observable activity: IActivity | null = null;\r\n    @observable loadingInitial = false;\r\n    @observable submitting = false;\r\n    @observable target = '';\r\n    @observable loading = false;\r\n    @observable.ref hubConnection: HubConnection | null = null;\r\n\r\n\r\n    @action createHubConnection = (activityId:string) => {\r\n        this.hubConnection = new HubConnectionBuilder().withUrl('http://localhost:5000/chat',{\r\n            accessTokenFactory: () => this.rootStore.commonStore.token!\r\n        }).configureLogging(LogLevel.Information).build();\r\n\r\n        this.hubConnection\r\n        .start()\r\n        .then(()=>console.log(this.hubConnection!.state))\r\n        .then(()=>{\r\n           console.log('Attempt to join group');\r\n           this.hubConnection!. invoke('AddToGroup', activityId)\r\n        })\r\n        .catch(error => console.log(\"Error escblishing connetion:\", error));\r\n\r\n        this.hubConnection.on('ReceiveComment', comment =>{\r\n            runInAction(()=>{\r\n                this.activity!.comments.push(comment);\r\n            })\r\n        })\r\n        this.hubConnection.on('Send', message =>{\r\n           toast.info(message); \r\n        })\r\n    };\r\n\r\n    @action stopHubConnection = () =>{\r\n        this.hubConnection!.invoke('RemoveFromGroup', this.activity!.id)\r\n            .then(()=>{\r\n                this.hubConnection!.stop();\r\n            })\r\n            .then(()=>console.log('Connection stopped'))\r\n            .catch(err=> console.log(err));\r\n        \r\n    }\r\n\r\n    @action addComment = async (values:any)=>{\r\n        values.activityId = this.activity!.id;\r\n        try {\r\n            await this.hubConnection!.invoke('SendComment', values)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    @computed get activitiesByDate() {\r\n        return this.groupActivitiesByDate(Array.from(this.activityRegistry.values()));\r\n    }\r\n\r\n    groupActivitiesByDate(activities: IActivity[]) {\r\n        const sortedActivities = activities.sort(\r\n            (a, b) => a.date.getTime() - b.date.getTime()\r\n        )\r\n        return Object.entries(sortedActivities.reduce((activities, activity) => {\r\n            const date = activity.date.toISOString().split('T')[0];\r\n            activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n            return activities;\r\n        }, {} as { [key: string]: IActivity[] }));\r\n    }\r\n\r\n    @action loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const activities = await agent.Activities.list();\r\n            runInAction(() => {\r\n                activities.forEach((activity) => {\r\n                    setActivityProps(activity, this.rootStore.userStore.user!);\r\n                    this.activityRegistry.set(activity.id, activity);\r\n                });\r\n                this.loadingInitial = false\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.loadingInitial = false;\r\n        }\r\n    };\r\n\r\n    @action loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.activity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                runInAction(() => {\r\n                    setActivityProps(activity, this.rootStore.userStore.user!);\r\n                    this.activity = activity;\r\n                    this.activityRegistry.set(activity.id, activity);\r\n                    this.loadingInitial = false;\r\n                })\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    @action clearActivity = () => {\r\n        this.activity = null;\r\n    }\r\n\r\n    getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id)\r\n    }\r\n\r\n\r\n\r\n\r\n    @action createActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const attendee  = createAttendee(this.rootStore.userStore.user!);\r\n            attendee.isHost =  true;\r\n            let attendees = [];\r\n            attendees.push(attendee);\r\n            activity.attendees = attendees;\r\n            activity.comments = [];\r\n            activity.isHost =  true;\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.submitting = false;\r\n            })\r\n            history.push(`/activities/${activity.id}`)\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n            })\r\n            toast.error('Problem submitting data')\r\n            console.log(error.response);\r\n\r\n        }\r\n    }\r\n\r\n    @action editActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.activity = activity;\r\n                this.submitting = false;\r\n            });\r\n            history.push(`/activities/${activity.id}`);\r\n        } catch (error) {\r\n            toast.error('Problem submitting data')\r\n            console.log(error);\r\n            this.submitting = false;\r\n        }\r\n    }\r\n\r\n    @action deleteActivity = async (event: SyntheticEvent<HTMLButtonElement>, id: string) => {\r\n        this.submitting = true;\r\n        this.target = event.currentTarget.name;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            this.activityRegistry.delete(id);\r\n            this.submitting = false;\r\n            this.target = '';\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.submitting = false;\r\n            this.target = '';\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @action attendActivity = async () => {\r\n        const attendee = createAttendee(this.rootStore.userStore.user!);\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.activity!.id)\r\n            runInAction(() => {\r\n                if (this.activity) {\r\n                    this.activity.attendees.push(attendee);\r\n                    this.activity.isGoing = true;\r\n                    this.activityRegistry.set(this.activity.id, this.activity);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            });\r\n            toast.error('Problem signing up to activity')\r\n        }\r\n\r\n    }\r\n\r\n    @action cancelAttendance = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.unattend(this.activity!.id);\r\n            runInAction(() => {\r\n                if (this.activity) {\r\n                    this.activity.attendees = this.activity.attendees.filter(a => a.username !== this.rootStore.userStore.user!.username);\r\n                    this.activity.isGoing = false;\r\n                    this.activityRegistry.set(this.activity.id, this.activity);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            });\r\n            toast.error('Problem cancelling attendance')\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\home\\HomePage.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\layout\\ScrollToTop.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetailHeader.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetailInfo.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetailChat.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetailSidebar.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\layout\\NotFound.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\TextInput.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\TextAreaInput.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\SelectInput.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\options\\categoryOptions.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\DateInput.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\util\\util.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\models\\activity.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\rootStore.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\userStore.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\user\\LoginForm.tsx",["198","199"],"import { FORM_ERROR } from 'final-form';\r\nimport React, { useContext } from 'react';\r\nimport { Form as FinalForm, Field } from 'react-final-form'\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport { Button, Form, Header } from 'semantic-ui-react';\r\nimport ErrorMessage from '../../app/common/form/ErrorMessage';\r\nimport TextInput from '../../app/common/form/TextInput';\r\nimport { IUserFormValues } from '../../app/models/user';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst validate = combineValidators({\r\n    email: isRequired('email'),\r\n    password: isRequired('password')\r\n})\r\n\r\nconst LoginForm = () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const { login } = rootStore.userStore;\r\n    return (\r\n        <FinalForm\r\n            onSubmit={(values: IUserFormValues) => login(values).catch(error => ({\r\n                [FORM_ERROR]: error\r\n            }))}\r\n            validate={validate}\r\n            render={({ handleSubmit, submitting, submitError, invalid, pristine, dirtySinceLastSubmit }) => (\r\n                <Form onSubmit={handleSubmit} error>\r\n                    <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\r\n                    <Field\r\n                        name='email'\r\n                        component={TextInput}\r\n                        placeholder='Email'\r\n                    />\r\n                    <Field\r\n                        name='password'\r\n                        component={TextInput}\r\n                        placeholder='Password'\r\n                        type='password'\r\n                    />\r\n                    {submitError && !dirtySinceLastSubmit && (<ErrorMessage error={submitError} text='invalid email or password' />)}\r\n                    <Button disabled={invalid && !dirtySinceLastSubmit || pristine} loading={submitting} color='teal' content='Login' fluid/>\r\n                </Form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LoginForm","D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\commonStore.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\modalStore.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessage.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\user\\RegisterForm.tsx",["200","201"],"import { FORM_ERROR } from 'final-form';\r\nimport React, { useContext } from 'react';\r\nimport { Form as FinalForm, Field } from 'react-final-form'\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport { Button, Form, Header } from 'semantic-ui-react';\r\nimport ErrorMessage from '../../app/common/form/ErrorMessage';\r\nimport TextInput from '../../app/common/form/TextInput';\r\nimport { IUserFormValues } from '../../app/models/user';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst validate = combineValidators({\r\n    username: isRequired('username'),\r\n    displayName: isRequired('display name'),\r\n    email: isRequired('email'),\r\n    password: isRequired('password')\r\n})\r\n\r\nconst RegisterForm = () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const { register } = rootStore.userStore;\r\n    return (\r\n        <FinalForm\r\n            onSubmit={(values: IUserFormValues) => register(values).catch(error => ({\r\n                [FORM_ERROR]: error\r\n            }))}\r\n            validate={validate}\r\n            render={({ handleSubmit, submitting, submitError, invalid, pristine, dirtySinceLastSubmit }) => (\r\n                <Form onSubmit={handleSubmit} error>\r\n                    <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center' />\r\n                    <Field\r\n                        name='username'\r\n                        component={TextInput}\r\n                        placeholder='Username'\r\n                    />\r\n                     <Field\r\n                        name='displayName'\r\n                        component={TextInput}\r\n                        placeholder='Display Name'\r\n                    /> <Field\r\n                    name='email'\r\n                    component={TextInput}\r\n                    placeholder='Email'\r\n                />\r\n                    <Field\r\n                        name='password'\r\n                        component={TextInput}\r\n                        placeholder='Password'\r\n                        type='password'\r\n                    />\r\n                    {submitError && !dirtySinceLastSubmit && (<ErrorMessage error={submitError}  />)}\r\n                    <Button disabled={invalid && !dirtySinceLastSubmit || pristine} loading={submitting} color='teal' content='Register' fluid/>\r\n                </Form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default RegisterForm","D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfilePage.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileHeader.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileContent.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\stores\\profileStore.ts",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfilePhotos.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\photoUpload\\PhotoWidgetDropzone.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\app\\common\\photoUpload\\PhotoWidgetCropper.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileDescription.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileEditForm.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileFollowings.tsx",[],"D:\\dotnet tutor\\Reactivities\\my-app\\src\\features\\profiles\\ProfileCard.tsx",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":2,"column":69,"nodeType":"208","messageId":"209","endLine":2,"endColumn":75},{"ruleId":"210","severity":1,"message":"211","line":40,"column":12,"nodeType":"212","messageId":"213","endLine":40,"endColumn":39,"fix":"214"},{"ruleId":"215","severity":1,"message":"216","line":40,"column":47,"nodeType":"217","messageId":"218","endLine":40,"endColumn":49},{"ruleId":"215","severity":1,"message":"216","line":40,"column":72,"nodeType":"217","messageId":"218","endLine":40,"endColumn":74},{"ruleId":"215","severity":1,"message":"216","line":51,"column":47,"nodeType":"217","messageId":"218","endLine":51,"endColumn":49},{"ruleId":"215","severity":1,"message":"216","line":51,"column":72,"nodeType":"217","messageId":"218","endLine":51,"endColumn":74},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"@typescript-eslint/no-unused-vars","'values' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property invoke.","MemberExpression","unexpectedWhitespace",{"range":"221","text":"222"},"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",[1489,1491],"."]